{"ast":null,"code":"var _jsxFileName = \"D:\\\\Portfolio\\\\gym\\\\ui-app\\\\src\\\\components\\\\SetNewPasswordForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetNewPasswordForm = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const {\n    token,\n    uid\n  } = useParams(); // استخراج token و uid من معلمات URL\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      // التحقق من تطابق كلمتي المرور\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await axios.post('http://127.0.0.1:8000/users/api/SetNewPassword/', {\n        password,\n        token,\n        uid\n      });\n      navigate('/login');\n    } catch (error) {\n      // معالجة الأخطاء\n      console.error('Error setting new password:', error);\n      // يمكنك عرض رسالة خطأ للمستخدم هنا\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Change password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SetNewPasswordForm, \"Ci9cmDtqnytmqrYHhlZqjqoncFQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = SetNewPasswordForm;\nexport default SetNewPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"SetNewPasswordForm\");","map":{"version":3,"names":["React","useState","axios","useLocation","useNavigate","useParams","jsxDEV","_jsxDEV","SetNewPasswordForm","_s","password","setPassword","confirmPassword","setConfirmPassword","token","uid","navigate","handleSubmit","e","preventDefault","alert","response","post","error","console","onSubmit","children","type","placeholder","value","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Portfolio/gym/ui-app/src/components/SetNewPasswordForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst SetNewPasswordForm = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const { token, uid } = useParams(); // استخراج token و uid من معلمات URL\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      // التحقق من تطابق كلمتي المرور\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:8000/users/api/SetNewPassword/', {\r\n        password,\r\n        token,\r\n        uid,\r\n      });\r\n\r\n      navigate('/login');\r\n    } catch (error) {\r\n      // معالجة الأخطاء\r\n      console.error('Error setting new password:', error);\r\n      // يمكنك عرض رسالة خطأ للمستخدم هنا\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"New Password\" \r\n        value={password} \r\n        onChange={(e) => setPassword(e.target.value)} \r\n        required \r\n      />\r\n      <input \r\n        type=\"password\" \r\n        placeholder=\"Confirm Password\" \r\n        value={confirmPassword} \r\n        onChange={(e) => setConfirmPassword(e.target.value)} \r\n        required \r\n      />\r\n      <button type=\"submit\">Change password</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SetNewPasswordForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM;IAAEa,KAAK;IAAEC;EAAI,CAAC,GAAGV,SAAS,CAAC,CAAC,CAAC,CAAC;EACpC,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIT,QAAQ,KAAKE,eAAe,EAAE;MAChC;MACAQ,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,iDAAiD,EAAE;QACnFZ,QAAQ;QACRI,KAAK;QACLC;MACF,CAAC,CAAC;MAEFC,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD;IACF;EACF,CAAC;EAED,oBACEhB,OAAA;IAAMkB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAC3BnB,OAAA;MACEoB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAEnB,QAAS;MAChBoB,QAAQ,EAAGZ,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;MAC7CG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF7B,OAAA;MACEoB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEjB,eAAgB;MACvBkB,QAAQ,EAAGZ,CAAC,IAAKL,kBAAkB,CAACK,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;MACpDG,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF7B,OAAA;MAAQoB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEX,CAAC;AAAC3B,EAAA,CAjDID,kBAAkB;EAAA,QAGCH,SAAS,EACfD,WAAW;AAAA;AAAAiC,EAAA,GAJxB7B,kBAAkB;AAmDxB,eAAeA,kBAAkB;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}